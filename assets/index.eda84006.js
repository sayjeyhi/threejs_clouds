import*as e from"https://cdn.skypack.dev/three@0.146";(function(){const i=document.createElement("link").relList;if(i&&i.supports&&i.supports("modulepreload"))return;for(const t of document.querySelectorAll('link[rel="modulepreload"]'))o(t);new MutationObserver(t=>{for(const s of t)if(s.type==="childList")for(const a of s.addedNodes)a.tagName==="LINK"&&a.rel==="modulepreload"&&o(a)}).observe(document,{childList:!0,subtree:!0});function n(t){const s={};return t.integrity&&(s.integrity=t.integrity),t.referrerpolicy&&(s.referrerPolicy=t.referrerpolicy),t.crossorigin==="use-credentials"?s.credentials="include":t.crossorigin==="anonymous"?s.credentials="omit":s.credentials="same-origin",s}function o(t){if(t.ep)return;t.ep=!0;const s=n(t);fetch(t.href,s)}})();class M{constructor(){}async init_(i){this.create_(),this.onLoad=()=>{},this.threejs_=i;const n=await fetch("./shaders/header.glsl"),o=await fetch("./shaders/common.glsl"),t=await fetch("./shaders/oklab.glsl"),s=await fetch("./shaders/blend-modes.glsl"),a=await fetch("./shaders/noise.glsl"),r=await fetch("./shaders/vertex-shader.glsl"),h=await fetch("./shaders/generator-shader.glsl"),d=new e.ShaderMaterial({uniforms:{zLevel:{value:0},numCells:{value:2}},vertexShader:await r.text(),fragmentShader:await n.text()+`
`+await t.text()+`
`+await o.text()+`
`+await s.text()+`
`+await a.text()+`
`+await h.text()});this.material_=d,this.scene_=new e.Scene,this.camera_=new e.OrthographicCamera(0,1,1,0,.1,1e3),this.camera_.position.set(0,0,1);const l=new e.PlaneGeometry(1,1),c=new e.Mesh(l,d);c.position.set(.5,.5,0),this.scene_.add(c),this.resolution_=32,this.rt_=new e.WebGLRenderTarget(this.resolution_,this.resolution_)}create_(){this.manager_=new e.LoadingManager,this.loader_=new e.TextureLoader(this.manager_),this.textures_={},this.manager_.onLoad=()=>{this.onLoad_()}}get Info(){return this.textures_}render_(i){this.material_.uniforms.zLevel.value=i,this.threejs_.setRenderTarget(this.rt_),this.threejs_.render(this.scene_,this.camera_);const n=new Uint8Array(this.resolution_*this.resolution_*4);return this.threejs_.readRenderTargetPixels(this.rt_,0,0,this.resolution_,this.resolution_,n),this.threejs_.setRenderTarget(null),this.threejs_.outputEncoding=e.LinearEncoding,n}onLoad_(){const i=this.resolution_,n=this.resolution_;this.textures_.diffuse={textures:[]};for(let o=0;o<64;o++)this.textures_.diffuse.textures.push(this.render_(o/4));for(let o in this.textures_){const t=this.textures_[o],s=new Uint8Array(t.textures.length*4*i*n);for(let r=0;r<t.textures.length;r++){const h=t.textures[r],d=r*(4*i*n);s.set(h,d)}const a=new e.Data3DTexture(s,i,n,t.textures.length);a.format=e.RGBAFormat,a.type=e.UnsignedByteType,a.minFilter=e.LinearFilter,a.magFilter=e.LinearFilter,a.wrapS=e.RepeatWrapping,a.wrapT=e.RepeatWrapping,a.wrapR=e.RepeatWrapping,a.generateMipmaps=!0,a.needsUpdate=!0,t.atlas=a}this.onLoad()}Load(){this.onLoad_()}}class W{constructor(){}async init_(i){this.create_(),this.onLoad=()=>{},this.threejs_=i;const n=await fetch("./shaders/header.glsl"),o=await fetch("./shaders/common.glsl"),t=await fetch("./shaders/oklab.glsl"),s=await fetch("./shaders/blend-modes.glsl"),a=await fetch("./shaders/noise.glsl"),r=await fetch("./shaders/vertex-shader.glsl"),h=await fetch("./shaders/sdf-generator-shader.glsl"),d=new e.ShaderMaterial({uniforms:{zLevel:{value:0},numCells:{value:2}},vertexShader:await r.text(),fragmentShader:await n.text()+`
`+await t.text()+`
`+await o.text()+`
`+await s.text()+`
`+await a.text()+`
`+await h.text()});this.material_=d,this.scene_=new e.Scene,this.camera_=new e.OrthographicCamera(0,1,1,0,.1,1e3),this.camera_.position.set(0,0,1);const l=new e.PlaneGeometry(1,1),c=new e.Mesh(l,d);c.position.set(.5,.5,0),this.scene_.add(c),this.resolution_=128,this.rt_=new e.WebGLRenderTarget(this.resolution_,this.resolution_)}create_(){this.manager_=new e.LoadingManager,this.loader_=new e.TextureLoader(this.manager_),this.textures_={},this.manager_.onLoad=()=>{this.onLoad_()}}get Info(){return this.textures_}render_(i){this.material_.uniforms.zLevel.value=i,this.threejs_.setRenderTarget(this.rt_),this.threejs_.render(this.scene_,this.camera_);const n=new Uint8Array(this.resolution_*this.resolution_*4);return this.threejs_.readRenderTargetPixels(this.rt_,0,0,this.resolution_,this.resolution_,n),this.threejs_.setRenderTarget(null),this.threejs_.outputEncoding=e.LinearEncoding,n}onLoad_(){const i=this.resolution_,n=this.resolution_,o=4;this.textures_.diffuse={textures:[]};for(let t=0;t<32;t++)this.textures_.diffuse.textures.push(this.render_(t));for(let t in this.textures_){const s=this.textures_[t],a=new Uint8Array(s.textures.length*o*i*n);for(let h=0;h<s.textures.length;h++){const d=s.textures[h],l=h*(o*i*n);a.set(d,l)}const r=new e.Data3DTexture(a,i,n,s.textures.length);r.format=e.RGBAFormat,r.type=e.UnsignedByteType,r.minFilter=e.LinearFilter,r.magFilter=e.LinearFilter,r.anisotropy=this.threejs_.capabilities.getMaxAnisotropy(),r.wrapS=e.RepeatWrapping,r.wrapT=e.RepeatWrapping,r.wrapR=e.ClampToEdgeWrapping,r.generateMipmaps=!0,r.needsUpdate=!0,s.atlas=r}this.onLoad()}Load(){this.onLoad_()}}class A{constructor(){}async initialize(){this.threejs_=new e.WebGLRenderer,this.threejs_.outputEncoding=e.LinearEncoding,document.body.appendChild(this.threejs_.domElement),window.addEventListener("resize",()=>{this.onWindowResize_()},!1),this.scene_=new e.Scene,this.finalScene_=new e.Scene,this.camera_=new e.OrthographicCamera(0,1,1,0,.1,1e3),this.camera_.position.set(0,0,1),this.rtScale_=.5,this.rtParams_={type:e.HalfFloatType,magFilter:e.LinearFilter,minFilter:e.LinearMipmapLinearFilter,anisotropy:this.threejs_.capabilities.getMaxAnisotropy(),generateMipmaps:!0},this.rt_=new e.WebGLRenderTarget(window.innerWidth*this.rtScale_,window.innerHeight*this.rtScale_,this.rtParams_),await this.setupProject_()}async setupProject_(){{const v=await fetch("./shaders/header.glsl"),L=await fetch("./shaders/common.glsl"),y=await fetch("./shaders/oklab.glsl"),T=await fetch("./shaders/blend-modes.glsl"),R=await fetch("./shaders/noise.glsl"),S=await fetch("./shaders/ui2d.glsl"),b=await fetch("./shaders/vertex-shader.glsl"),j=await fetch("./shaders/fragment-shader-composite.glsl"),f=new e.ShaderMaterial({uniforms:{resolution:{value:new e.Vector2(window.innerWidth,window.innerHeight)},frameResolution:{value:new e.Vector2(this.rt_.width,this.rt_.height)},time:{value:0},frameTexture:{value:null},uiTextures:{value:null}},vertexShader:await b.text(),fragmentShader:await v.text()+`
`+await y.text()+`
`+await L.text()+`
`+await T.text()+`
`+await R.text()+`
`+await S.text()+`
`+await j.text()});this.compositeMaterial_=f;const F=new e.PlaneGeometry(1,1),g=new e.Mesh(F,f);g.position.set(.5,.5,0),this.finalScene_.add(g)}const i=await fetch("./shaders/header.glsl"),n=await fetch("./shaders/common.glsl"),o=await fetch("./shaders/oklab.glsl"),t=await fetch("./shaders/blend-modes.glsl"),s=await fetch("./shaders/noise.glsl"),a=await fetch("./shaders/ui2d.glsl"),r=await fetch("./shaders/vertex-shader.glsl"),h=await fetch("./shaders/fragment-shader.glsl"),l=new e.TextureLoader().load("./textures/HDR_L_0.png");l.wrapS=e.RepeatWrapping,l.wrapT=e.RepeatWrapping,l.minFilter=e.NearestFilter,l.magFilter=e.NearestFilter;const c=new e.ShaderMaterial({uniforms:{resolution:{value:new e.Vector2(window.innerWidth,window.innerHeight)},time:{value:0},frame:{value:0},perlinWorley:{value:null},sdfField:{value:null},blueNoise:{value:l}},vertexShader:await r.text(),fragmentShader:await i.text()+`
`+await o.text()+`
`+await n.text()+`
`+await t.text()+`
`+await s.text()+`
`+await a.text()+`
`+await h.text()}),u=new M(this.threejs_);await u.init_(this.threejs_),u.onLoad=()=>{c.uniforms.perlinWorley.value=u.Info.diffuse.atlas},u.Load();const _=new W(this.threejs_);await _.init_(this.threejs_),_.onLoad=()=>{c.uniforms.sdfField.value=_.Info.diffuse.atlas},_.Load();const x=new e.PlaneGeometry(1,1),m=new e.Mesh(x,c);m.position.set(.5,.5,0),this.scene_.add(m),this.material_=c,this.clock_=new e.Clock,this.totalTime_=0,this.previousRAF_=null,this.onWindowResize_(),this.raf_()}onWindowResize_(){this.threejs_.setSize(window.innerWidth,window.innerHeight),this.rt_.setSize(window.innerWidth*this.rtScale_,window.innerHeight*this.rtScale_),this.material_.uniforms.resolution.value=new e.Vector2(this.rt_.width,this.rt_.height),this.compositeMaterial_.uniforms.resolution.value=new e.Vector2(window.innerWidth,window.innerHeight),this.compositeMaterial_.uniforms.frameResolution.value=new e.Vector2(this.rt_.width,this.rt_.height)}raf_(){requestAnimationFrame(i=>{this.step_(i-this.previousRAF_),this.render_(),this.clock_.running||this.clock_.start(),setTimeout(()=>{this.raf_(),this.previousRAF_=i},1)})}step_(i){this.totalTime_=this.clock_.getElapsedTime(),this.material_.uniforms.time.value=this.totalTime_,this.material_.uniforms.frame.value=this.material_.uniforms.frame.value+1,this.compositeMaterial_.uniforms.time.value=this.totalTime_}render_(){this.threejs_.setRenderTarget(this.rt_),this.threejs_.render(this.scene_,this.camera_),this.threejs_.setRenderTarget(null),this.compositeMaterial_.uniforms.frameTexture.value=this.rt_.texture,this.threejs_.render(this.finalScene_,this.camera_)}}let p=null;window.addEventListener("DOMContentLoaded",async()=>{p=new A,await p.initialize()});
